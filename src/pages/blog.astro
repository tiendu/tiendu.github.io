---
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPost from "../components/BlogPost.astro";

const pageTitle = "Blog";

// Load all posts
const allPosts = Object.values(
  await import.meta.glob("./posts/*.md", { eager: true })
);

// Helpers
function toDate(p) {
  const d = p.frontmatter?.pubDate;
  return d ? new Date(d) : new Date(0);
}
function getPinValue(p) {
  const v = p.frontmatter?.pinned;
  if (typeof v === "number") return v;     // explicit priority
  if (v === true) return Number.POSITIVE_INFINITY; // boolean pinned goes after numbered ones
  return null;
}

// Split pinned / others
const pinned = allPosts
  .filter(p => p.frontmatter?.pinned)
  // sort numbered first by ascending (1 before 2), then booleans, then date desc
  .sort((a, b) => {
    const pa = getPinValue(a);
    const pb = getPinValue(b);
    if (pa !== null && pb !== null && pa !== pb) return pa - pb; // 1,2,3…
    if (pa !== null && pb !== null && pa === pb) return toDate(b) - toDate(a); // same number → newer first
    if (pa !== null && pb === null) return -1;  // numbers/true before non-pinned
    if (pa === null && pb !== null) return 1;
    // both boolean true (Infinity) or fallback: date desc
    return toDate(b) - toDate(a);
  });

const unpinned = allPosts
  .filter(p => !p.frontmatter?.pinned)
  .sort((a, b) => toDate(b) - toDate(a));
---

<BaseLayout pageTitle={pageTitle}>
  {pinned.length > 0 && (
    <>
      <h2>Pinned</h2>
      <ul class="post-list pinned">
        {pinned.map((post) => (
          <BlogPost url={post.url} title={post.frontmatter.title} pinned={post.frontmatter.pinned} />
        ))}
      </ul>
      <hr />
    </>
  )}

  <h2>All posts</h2>
  <ul class="post-list">
    {unpinned.map((post) => (
      <BlogPost url={post.url} title={post.frontmatter.title} />
    ))}
  </ul>

  <style is:global>
    .post-list { padding: 0; margin: 0 0 2rem 0; }
    .post-list li { margin: 0 0 1rem 0; }
    .post-list.pinned li a { font-weight: 600; }
  </style>
</BaseLayout>
